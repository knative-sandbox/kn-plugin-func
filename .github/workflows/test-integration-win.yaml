name: Func Integration Test Windows

on: [pull_request]

jobs:
  test:
    name: Integration Test
    strategy:
      matrix:
        go: [1.18.x]
        os: ["windows-latest"]
    runs-on: ${{ matrix.os }}
    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-go@v3
#        with:
#          go-version: ${{ matrix.go }}
      - name: test
        shell: pwsh
        run: |
          Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All
          Get-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V
          docker.exe info --format '{{.OSType}}'
          New-Item -Path 'c:\' -Name 'minikube' -ItemType Directory -Force
          Invoke-WebRequest -OutFile 'c:\minikube\minikube.exe' -Uri 'https://github.com/kubernetes/minikube/releases/latest/download/minikube-windows-amd64.exe' -UseBasicParsing
          $oldPath = [Environment]::GetEnvironmentVariable('Path', [EnvironmentVariableTarget]::Machine)
          if ($oldPath.Split(';') -inotcontains 'C:\minikube'){ `
            [Environment]::SetEnvironmentVariable('Path', $('{0};C:\minikube' -f $oldPath), [EnvironmentVariableTarget]::Machine) `
          }
          minikube.exe start --driver=virtualbox
          #minikube.exe start --driver=docker
          #minikube.exe start --driver=hyperv 


#      - name: Install Binaries
#        run: ./hack/binaries.sh
#      - name: Allocate Cluster
#        run: ./hack/allocate.sh
#      - name: Local Registry
#        run: ./hack/registry.sh
#      - name: Integration Test
#        run: make test-integration
#      - uses: codecov/codecov-action@v3
#        with:
#          files: ./coverage.txt
#          flags: integration-tests
